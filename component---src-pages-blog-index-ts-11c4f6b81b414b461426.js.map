{"version":3,"sources":["webpack:///./src/layouts/DefaultLayout/DefaultLayoutStyles.ts","webpack:///./src/layouts/DefaultLayout/DefaultLayout.tsx","webpack:///./src/layouts/DefaultLayout/index.ts","webpack:///./src/views/Blog/index.tsx","webpack:///./src/pages/blog/index.ts","webpack:///./src/components/Card/CardStyles.ts","webpack:///./src/components/Card/index.ts","webpack:///./src/components/Card/Card.tsx","webpack:///./src/views/Blog/BlogStyles.ts","webpack:///./src/hooks/use-blog-posts.ts","webpack:///./src/views/Blog/Blog.tsx"],"names":["Container","styled","div","device","tablet","DefaultLayout","props","children","useState","menuIsOpen","setMenuIsOpen","handleToggleMenu","open","Header","openSideMenu","CustomDrawer","isOpen","handleToggle","SideMenuContent","Blog","Paper","attrs","elevation","PictureBox","Image","Badge","background","BadgeText","Typography","txtcolor","InfoContainer","Title","SubTitle","Card","title","subtitle","image","badge","src","text","color","CardContainer","laptop","StyLink","Link","NotFoundText","useBlogPosts","edges","allMarkdownRemark","RenderCard","node","frontmatter","slug","tags","badgeColors","badgeBackgrounds","get","key","to","map","length"],"mappings":"gMAKaA,EAAYC,IAAOC,IAAV,iFAAGD,CAAH,wGAMXE,IAAOC,QCwBHC,EApBqC,SAAAC,GAAS,IACnDC,EAAaD,EAAbC,SADmD,EAEvBC,oBAAS,GAAtCC,EAFoD,KAExCC,EAFwC,KAIrDC,EAAmB,SAACC,GACxBF,EAAcE,IAGhB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,aAAcH,IACtB,kBAACI,EAAA,EAAD,CAAcC,OAAQP,EAAYQ,aAAcN,GAC9C,kBAACO,EAAA,EAAD,OAEF,kBAAC,EAAD,KACE,8BAAOX,MC7BAF,O,k+ECAAc,E,UAAf,QCAeA,a,sJCMFnB,EAAYC,YAAOmB,KAAOC,OAAM,iBAAO,CAClDC,UAAW,MADS,4EAAGrB,CAAH,8FAYTsB,EAAatB,YAAOuB,KAAV,6EAAGvB,CAAH,gHAQVwB,EAAQxB,IAAOC,IAAV,wEAAGD,CAAH,kJAKI,SAAAK,GAAK,OAAIA,EAAMoB,YAAc,UAMtCC,EAAY1B,YAAO2B,KAAV,4EAAG3B,CAAH,0CAEX,SAAAK,GAAK,OAAIA,EAAMuB,UAAY,WAGzBC,EAAgB7B,IAAOC,IAAV,gFAAGD,CAAH,wEASb8B,EAAQ9B,YAAO2B,KAAV,wEAAG3B,CAAH,MAEL+B,EAAW/B,YAAO2B,KAAV,2EAAG3B,CAAH,MCrDNgC,ECgBmB,SAAC3B,GAAqB,IAC9C4B,EAAkC5B,EAAlC4B,MAAOC,EAA2B7B,EAA3B6B,SAAUC,EAAiB9B,EAAjB8B,MAAOC,EAAU/B,EAAV+B,MAChC,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAcC,IAAKF,IACnB,kBAAC,EAAD,KACGC,EAAME,MACL,kBAAC,EAAD,CAASb,WAAYW,EAAMX,YACzB,kBAAC,EAAD,CAAaG,SAAUQ,EAAMG,OAAQH,EAAME,OAG/C,kBAAC,EAAD,KAAUL,GACV,kBAAC,EAAD,KAAaC,M,wBCtBRM,EAAgBxC,IAAOC,IAAV,4EAAGD,CAAH,mMAOfE,IAAOC,OAKPD,IAAOuC,QAKLC,EAAU1C,YAAO2C,QAAV,sEAAG3C,CAAH,yCAKP4C,EAAe5C,YAAO2B,KAAV,2EAAG3B,CAAH,M,YCmBV6C,EAxBM,WACnB,eC6Ba3B,UA1CQ,WAAM,IAEJ4B,EACnBD,IADFE,kBAAqBD,MAGjBE,EAA4C,SAAC,GAAa,QAAXC,KAEjDC,YAAeC,EAF6C,EAE7CA,KAAMlB,EAFuC,EAEvCA,MAAOE,EAFgC,EAEhCA,MAAOiB,EAFyB,EAEzBA,KAAMC,EAFmB,EAEnBA,YAAaC,EAFM,EAENA,iBAGlDhB,EAAOiB,cAAIH,EAAM,MAAO,MACxBb,EAAQgB,cAAIF,EAAa,MAAO,MAChC5B,EAAa8B,cAAID,EAAkB,MAAO,MAEhD,OACE,kBAAC,EAAD,CAAWE,IAAG,aAAeL,EAAQM,GAAIN,GACvC,kBAAC,EAAD,CACElB,MAAOA,EACPC,SAAS,GACTC,MAAOA,EACPC,MAAO,CAAEE,OAAMC,QAAOd,kBAM9B,OACE,kBAACrB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAK6B,MAAM,SACX,oCACA,kBAAC,EAAD,KACGa,EAAMY,KAAI,gBAAGT,EAAH,EAAGA,KAAH,OACT,kBAACD,EAAD,CAAYC,KAAMA,QAElBH,EAAMa,QACN,kBAAC,EAAD","file":"component---src-pages-blog-index-ts-11c4f6b81b414b461426.js","sourcesContent":["import styled from 'styled-components'\n\n// Configs\nimport device from '@Config/devices.config'\n\nexport const Container = styled.div`\n  position: relative;\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 4rem 1.45rem;\n\n  @media ${device.tablet} {\n    padding: 4rem 4rem;\n  }\n`\n","import React, { useState } from 'react'\n\n// Main CSS\nimport '@Style/layout.css'\n\n// Components\nimport Header from '@Component/Header'\nimport CustomDrawer from '@Component/CustomDrawer'\nimport SideMenuContent from '@Component/SideMenuContent'\nimport * as S from './DefaultLayoutStyles'\n\ninterface DefaultLayoutProps {\n  children: React.ReactNode\n}\n\nconst DefaultLayout: React.FC<DefaultLayoutProps> = props => {\n  const { children } = props\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\n\n  const handleToggleMenu = (open: boolean) => {\n    setMenuIsOpen(open)\n  }\n\n  return (\n    <>\n      <Header openSideMenu={handleToggleMenu} />\n      <CustomDrawer isOpen={menuIsOpen} handleToggle={handleToggleMenu}>\n        <SideMenuContent />\n      </CustomDrawer>\n      <S.Container>\n        <main>{children}</main>\n      </S.Container>\n    </>\n  )\n}\nexport default DefaultLayout\n","import DefaultLayout from './DefaultLayout'\nexport default DefaultLayout\n","import Blog from './Blog';\nexport default Blog;","import Blog from '@View/Blog';\nexport default Blog;","import styled from 'styled-components'\n\n// Components\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Image from '@Component/Image'\n\nexport const Container = styled(Paper).attrs(() => ({\n  elevation: 3,\n}))`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  &:hover {\n    box-shadow: 1px 1px 5px 3px #bbb;\n  }\n`\n\nexport const PictureBox = styled(Image)`\n  width: 100%;\n  height: 120px;\n  background-color: #ddd;\n  border-bottom: 1px solid black;\n  border-radius: 0.3em 0.3em 0 0;\n`\n\nexport const Badge = styled.div<{ background: string }>`\n  position: absolute;\n  top: -15px;\n  min-width: 50px;\n  height: 27px;\n  background-color: ${props => props.background || '#111'};\n  border-radius: 0.3em;\n  padding: 3px;\n  box-shadow: 1px 1px 5px 1px #888;\n`\n\nexport const BadgeText = styled(Typography)<{ txtcolor: string }>`\n  font-size: 16px !important;\n  color: ${props => props.txtcolor || 'white'};\n`\n\nexport const InfoContainer = styled.div`\n  position: relative;\n  padding: 25px 10px 15px 10px;\n\n  p {\n    user-select: none;\n  }\n`\n\nexport const Title = styled(Typography)``\n\nexport const SubTitle = styled(Typography)``\n","import Card from './Card'\nexport default Card\n","import React from 'react'\n\nimport * as S from './CardStyles'\n\ninterface Badge {\n  text: string\n  color?: string\n  background?: string\n}\n\ninterface CardProps {\n  title: string\n  subtitle: string\n  image?: string\n  badge?: Badge\n}\n\nconst Card: React.FC<CardProps> = (props: CardProps) => {\n  const { title, subtitle, image, badge } = props\n  return (\n    <S.Container>\n      <S.PictureBox src={image} />\n      <S.InfoContainer>\n        {badge.text && (\n          <S.Badge background={badge.background}>\n            <S.BadgeText txtcolor={badge.color}>{badge.text}</S.BadgeText>\n          </S.Badge>\n        )}\n        <S.Title>{title}</S.Title>\n        <S.SubTitle>{subtitle}</S.SubTitle>\n      </S.InfoContainer>\n    </S.Container>\n  )\n}\n\nexport default Card\n","import styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nimport Typography from '@material-ui/core/Typography';\n\nimport device from '@Config/devices.config'\n\nexport const CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  padding: 0 10%;\n\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr;\n    padding: 0;\n  }\n\n  @media ${device.laptop} {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`\n\nexport const StyLink = styled(Link)`\n  text-decoration: none;\n  color: #111111;\n`\n\nexport const NotFoundText = styled(Typography)``;\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport interface EdgesNode {\n  id: string\n  excerpt: string\n  frontmatter: {\n    date: string\n    slug: string\n    title: string\n    image: string\n    tags: string[]\n    badgeColors: string[]\n    badgeBackgrounds: string[]\n  }\n}\n\ninterface BlogPosts {\n  allMarkdownRemark: {\n    edges: {\n      node: EdgesNode\n    }[]\n  }\n}\n\nconst useBlogPosts = (): BlogPosts => {\n  return useStaticQuery<BlogPosts>(graphql`\n    query {\n      allMarkdownRemark(filter: {frontmatter: {hidden: {eq: false}}}, sort: { order: DESC, fields: [frontmatter___date] }) {\n        edges {\n          node {\n            id\n            excerpt(pruneLength: 250)\n            frontmatter {\n              date(formatString: \"MMMM DD, YYYY\")\n              slug\n              title\n              image\n              tags\n              badgeColors\n              badgeBackgrounds\n            }\n          }\n        }\n      }\n    }\n  `)\n}\n\nexport default useBlogPosts\n","import React from 'react'\nimport { get } from 'lodash'\n\n// Components\nimport DefaultLayout from '@Layout/DefaultLayout'\nimport SEO from '@Component/Seo'\nimport Card from '@Component/Card'\nimport * as S from './BlogStyles'\n\n// Hooks\nimport useBlogPosts, { EdgesNode } from '@Hook/use-blog-posts'\n\nconst Blog: React.FC = () => {\n  const {\n    allMarkdownRemark: { edges },\n  } = useBlogPosts()\n\n  const RenderCard: React.FC<{ node: EdgesNode }> = ({ node }) => {\n    const {\n      frontmatter: { slug, title, image, tags, badgeColors, badgeBackgrounds },\n    } = node\n\n    const text = get(tags, '[0]', null)\n    const color = get(badgeColors, '[0]', null)\n    const background = get(badgeBackgrounds, '[0]', null)\n\n    return (\n      <S.StyLink key={`blog-post-${slug}`} to={slug}>\n        <Card\n          title={title}\n          subtitle=\"\"\n          image={image}\n          badge={{ text, color, background }}\n        />\n      </S.StyLink>\n    )\n  }\n\n  return (\n    <DefaultLayout>\n      <SEO title=\"Blog\" />\n      <h1>BLOG</h1>\n      <S.CardContainer>\n        {edges.map(({ node }) => (\n          <RenderCard node={node} />\n        ))}\n        {!edges.length && (\n          <S.NotFoundText>Nenhum post encontrado</S.NotFoundText>\n        )}\n      </S.CardContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}