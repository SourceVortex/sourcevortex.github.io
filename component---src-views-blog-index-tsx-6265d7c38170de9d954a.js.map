{"version":3,"sources":["webpack:///./src/styles/CardStyles.ts","webpack:///./src/components/Card/index.tsx","webpack:///./src/styles/BlogStyles.ts","webpack:///./src/hooks/use-blog-posts.ts","webpack:///./src/views/Blog/index.tsx","webpack:///./src/styles/DefaultLayoutStyles.ts","webpack:///./src/layouts/DefaultLayout/index.tsx","webpack:///./src/utils/getCategoryColors.ts"],"names":["Container","styled","Paper","attrs","elevation","PictureBox","Image","Badge","div","props","background","BadgeText","Typography","txtcolor","InfoContainer","Title","SubTitle","Card","title","subtitle","image","wpImage","badge","src","wordpress","text","color","defaultProps","h1","CardContainer","device","tablet","laptop","StyLink","Link","NotFoundText","useBlogPostsWP","Blog","edges","useBlogPosts","allWpPost","RenderCard","node","link","categories","featuredImage","postImage","get","categoryName","categorySlug","getCategoryColors","key","to","DefaultLayout","map","id","length","Frame","children","useState","menuIsOpen","setMenuIsOpen","handleToggleMenu","open","Header","openSideMenu","CustomDrawer","isOpen","handleToggle","SideMenuContent","getCategoryColor","type","slug","nodes","v","CategoryColors"],"mappings":"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","file":"component---src-views-blog-index-tsx-6265d7c38170de9d954a.js","sourcesContent":["import styled from 'styled-components'\n\n// Components\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Image from '@Component/Image'\n\nexport const Container = styled(Paper).attrs(() => ({\n  elevation: 3,\n}))`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  &:hover {\n    box-shadow: 1px 1px 5px 3px #bbb;\n  }\n`\n\nexport const PictureBox = styled(Image)`\n  width: 100%;\n  height: 160px;\n  background-color: #ddd;\n  border-bottom: 1px solid black;\n  border-radius: 0.3em 0.3em 0 0;\n`\n\nexport const Badge = styled.div<{ background: string }>`\n  position: absolute;\n  top: -15px;\n  min-width: 50px;\n  height: 27px;\n  background-color: ${props => props.background || '#111'};\n  border-radius: 0.3em;\n  padding: 3px;\n  box-shadow: 1px 1px 5px 0px #000;\n`\n\nexport const BadgeText = styled(Typography)<{ txtcolor: string }>`\n  font-size: 16px !important;\n  color: ${props => props.txtcolor || 'white'};\n`\n\nexport const InfoContainer = styled.div`\n  position: relative;\n  padding: 25px 10px 15px 10px;\n\n  p {\n    user-select: none;\n  }\n`\n\nexport const Title = styled(Typography)``\n\nexport const SubTitle = styled(Typography)``\n","import React from 'react'\n\nimport * as S from '@Style/CardStyles'\n\ninterface Badge {\n  text: string\n  color?: string\n  background?: string\n}\n\ninterface CardProps {\n  title: string\n  subtitle: string\n  image?: string\n  wpImage?: boolean\n  badge?: Badge\n}\n\nconst Card: React.FC<CardProps> = (props: CardProps) => {\n  const { title, subtitle, image, wpImage, badge } = props\n  return (\n    <S.Container>\n      <S.PictureBox src={image} wordpress={wpImage} />\n      <S.InfoContainer>\n        {badge.text && (\n          <S.Badge background={badge.background}>\n            <S.BadgeText txtcolor={badge.color}>{badge.text}</S.BadgeText>\n          </S.Badge>\n        )}\n        <S.Title>{title}</S.Title>\n        <S.SubTitle>{subtitle}</S.SubTitle>\n      </S.InfoContainer>\n    </S.Container>\n  )\n}\n\nCard.defaultProps = {\n  wpImage: false,\n}\n\nexport default Card\n","import styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport device from '@Config/devices.config'\n\nexport const Title = styled.h1`\n  text-align: center;\n`\n\nexport const CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  padding: 0 10%;\n\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr;\n    padding: 0;\n  }\n\n  @media ${device.laptop} {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`\n\nexport const StyLink = styled(Link)`\n  text-decoration: none;\n  color: #111111;\n`\n\nexport const NotFoundText = styled(Typography)``\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport interface FeaturedImage {\n  node: {\n    sourceUrl: string\n  }\n}\n\nexport interface ClassifierNode {\n  nodes: {\n    slug: string\n    name: string\n    link: string\n  }[]\n}\n\nexport interface EdgesNode {\n  id: string\n  slug: string\n  link: string\n  date: string\n  title: string\n  excerpt: string\n  featuredImage: FeaturedImage\n  categories: ClassifierNode\n  tags: ClassifierNode\n}\n\ninterface BlogPosts {\n  allWpPost: {\n    edges: {\n      node: EdgesNode\n    }[]\n  }\n}\n\nconst useBlogPostsWP = (): BlogPosts => {\n  return useStaticQuery<BlogPosts>(graphql`\n    query {\n      allWpPost(sort: { fields: date, order: DESC }) {\n        edges {\n          node {\n            id\n            slug\n            link\n            date\n            title\n            excerpt\n            featuredImage {\n              node {\n                sourceUrl\n              }\n            }\n            categories {\n              nodes {\n                slug\n                name\n                link\n              }\n            }\n            tags {\n              nodes {\n                slug\n                name\n                link\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n}\n\nexport default useBlogPostsWP\n","import React from 'react'\nimport { get } from 'lodash'\n\n// Utils\nimport getCategoryColors from '@Util/getCategoryColors'\n\n// Components\nimport DefaultLayout from '@Layout/DefaultLayout'\nimport SEO from '@Component/Seo'\nimport Card from '@Component/Card'\nimport * as S from '@Style/BlogStyles'\n\n// Hooks\nimport useBlogPosts, { EdgesNode } from '@Hook/use-blog-posts'\n\nconst Blog: React.FC = () => {\n  const {\n    allWpPost: { edges },\n  } = useBlogPosts()\n\n  const RenderCard: React.FC<{ node: EdgesNode }> = ({ node }) => {\n    const { link, title, categories, featuredImage } = node\n\n    const postImage = get(featuredImage, 'node.sourceUrl', '')\n    const categoryName = get(categories, 'nodes.[0].name', null)\n    const categorySlug = get(categories, 'nodes.[0].slug', null)\n\n    // prettier-ignore\n    const background = getCategoryColors('background', null, categorySlug) as string\n    const color = getCategoryColors('color', null, categorySlug) as string\n\n    return (\n      <S.StyLink key={`blog-post-${link}`} to={`/blog${link}`}>\n        <Card\n          image={postImage}\n          wpImage\n          badge={{\n            text: categoryName,\n            background,\n            color,\n          }}\n          title={title}\n          subtitle=\"\"\n        />\n      </S.StyLink>\n    )\n  }\n\n  return (\n    <DefaultLayout>\n      <SEO title=\"Blog\" />\n      <S.Title>BLOG</S.Title>\n      <S.CardContainer>\n        {edges.map(({ node }) => (\n          <RenderCard key={`card-${node.id}`} node={node} />\n        ))}\n        {!edges.length && (\n          <S.NotFoundText>Nenhum post encontrado</S.NotFoundText>\n        )}\n      </S.CardContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default Blog\n","import styled from 'styled-components'\n\n// Configs\nimport device from '@Config/devices.config'\n\nexport const Frame = styled.div`\n  position: relative;\n  padding: 10px;\n  height: 100vh;\n`\n\nexport const Container = styled.div`\n  height: calc(100vh - 70px);\n  position: relative;\n  margin: 0 auto;\n  border: 1px solid gray;\n  border-radius: 0 0 5px 5px;\n  overflow-y: scroll;\n  box-shadow: 1px 1px 15px 1px #555;\n\n  @media ${device.tablet} {\n    padding: 1rem 10rem;\n  }\n`\n","import React, { useState } from 'react'\n\n// Main CSS\nimport GlobalStyles from '@Style/_GlobalStyles'\n\n// Components\nimport Header from '@Component/Header'\nimport CustomDrawer from '@Component/CustomDrawer'\nimport SideMenuContent from '@Component/SideMenuContent'\nimport * as S from '@Style/DefaultLayoutStyles'\n\ninterface DefaultLayoutProps {\n  children: React.ReactNode\n}\n\nconst DefaultLayout: React.FC<DefaultLayoutProps> = props => {\n  const { children } = props\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\n\n  const handleToggleMenu = (open: boolean) => {\n    setMenuIsOpen(open)\n  }\n\n  return (\n    <>\n      <S.Frame>\n        <GlobalStyles />\n        <Header openSideMenu={handleToggleMenu} />\n        <CustomDrawer isOpen={menuIsOpen} handleToggle={handleToggleMenu}>\n          <SideMenuContent />\n        </CustomDrawer>\n        <S.Container>\n          <main>{children}</main>\n        </S.Container>\n      </S.Frame>\n    </>\n  )\n}\nexport default DefaultLayout\n","import { get } from 'lodash'\nimport * as CategoryColors from '@Config/category.colors'\nimport { ClassifierNode } from '@Hook/use-blog-posts'\n\ntype ColorTypes = 'background' | 'color'\n\n/**\n * Get category color setted in 'src/config/category.colors.json\n *\n * @param type\n * @param categories\n * @param slug\n */\nexport default function getCategoryColor(\n  type: ColorTypes,\n  categories?: ClassifierNode,\n  slug?: string\n): string[] | string | null {\n  if (categories) {\n    return categories.nodes.map(v =>\n      get(CategoryColors, `default.${v.slug}.${type}`)\n    )\n  } else if (slug) {\n    return get(CategoryColors, `default.${slug}.${type}`)\n  } else {\n    return null\n  }\n}\n"],"sourceRoot":""}