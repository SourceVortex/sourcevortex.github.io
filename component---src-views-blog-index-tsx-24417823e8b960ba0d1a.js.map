{"version":3,"sources":["webpack://sourcevortex-gatsby-template/./src/styles/DefaultLayoutStyles.ts","webpack://sourcevortex-gatsby-template/./src/layouts/DefaultLayout/index.tsx","webpack://sourcevortex-gatsby-template/./src/utils/getCategoryColors.ts","webpack://sourcevortex-gatsby-template/./src/styles/CardStyles.ts","webpack://sourcevortex-gatsby-template/./src/components/Card/index.tsx","webpack://sourcevortex-gatsby-template/./src/styles/BlogStyles.ts","webpack://sourcevortex-gatsby-template/./src/hooks/use-blog-posts.ts","webpack://sourcevortex-gatsby-template/./src/views/Blog/index.tsx"],"names":["Frame","styled","Container","device","props","children","useState","menuIsOpen","setMenuIsOpen","handleToggleMenu","open","Header","openSideMenu","CustomDrawer","isOpen","handleToggle","SideMenuContent","getCategoryColor","type","categories","slug","nodes","map","v","CategoryColors","Paper","attrs","elevation","PictureBox","Image","Badge","background","BadgeText","Typography","txtcolor","InfoContainer","Title","SubTitle","Card","title","subtitle","image","wpImage","badge","src","wordpress","text","color","defaultProps","CardContainer","StyLink","Link","NotFoundText","useStaticQuery","edges","useBlogPosts","allWpPost","RenderCard","node","link","featuredImage","postImage","categoryName","categorySlug","getCategoryColors","key","to","DefaultLayout","id","length"],"mappings":"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","file":"component---src-views-blog-index-tsx-24417823e8b960ba0d1a.js","sourcesContent":["import styled from 'styled-components'\n\n// Configs\nimport device from '@Config/devices.config'\n\nexport const Frame = styled.div`\n  position: relative;\n  padding: 10px;\n  height: 100vh;\n`\n\nexport const Container = styled.div`\n  height: calc(100vh - 70px);\n  position: relative;\n  margin: 0 auto;\n  border: 1px solid gray;\n  border-radius: 0 0 5px 5px;\n  overflow-y: scroll;\n  box-shadow: 1px 1px 15px 1px #555;\n\n  @media ${device.tablet} {\n    padding: 1rem 10rem;\n  }\n`\n","import React, { useState } from 'react'\n\n// Main CSS\nimport GlobalStyles from '@Style/_GlobalStyles'\n\n// Components\nimport Header from '@Component/Header'\nimport CustomDrawer from '@Component/CustomDrawer'\nimport SideMenuContent from '@Component/SideMenuContent'\nimport * as S from '@Style/DefaultLayoutStyles'\n\ninterface DefaultLayoutProps {\n  children: React.ReactNode\n}\n\nconst DefaultLayout: React.FC<DefaultLayoutProps> = props => {\n  const { children } = props\n  const [menuIsOpen, setMenuIsOpen] = useState(false)\n\n  const handleToggleMenu = (open: boolean) => {\n    setMenuIsOpen(open)\n  }\n\n  return (\n    <>\n      <S.Frame>\n        <GlobalStyles />\n        <Header openSideMenu={handleToggleMenu} />\n        <CustomDrawer isOpen={menuIsOpen} handleToggle={handleToggleMenu}>\n          <SideMenuContent />\n        </CustomDrawer>\n        <S.Container>\n          <main>{children}</main>\n        </S.Container>\n      </S.Frame>\n    </>\n  )\n}\nexport default DefaultLayout\n","import { get } from 'lodash'\nimport * as CategoryColors from '@Config/category.colors'\nimport { ClassifierNode } from '@Hook/use-blog-posts'\n\ntype ColorTypes = 'background' | 'color'\n\n/**\n * Get category color setted in 'src/config/category.colors.json\n *\n * @param type\n * @param categories\n * @param slug\n */\nexport default function getCategoryColor(\n  type: ColorTypes,\n  categories?: ClassifierNode,\n  slug?: string\n): string[] | string | null {\n  if (categories) {\n    return categories.nodes.map(v =>\n      get(CategoryColors, `default.${v.slug}.${type}`)\n    )\n  } else if (slug) {\n    return get(CategoryColors, `default.${slug}.${type}`)\n  } else {\n    return null\n  }\n}\n","import styled from 'styled-components'\n\n// Components\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport Image from '@Component/Image'\n\nexport const Container = styled(Paper).attrs(() => ({\n  elevation: 3,\n}))`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n\n  &:hover {\n    box-shadow: 1px 1px 5px 3px #bbb;\n  }\n`\n\nexport const PictureBox = styled(Image)`\n  width: 100%;\n  height: 160px;\n  background-color: #ddd;\n  border-bottom: 1px solid black;\n  border-radius: 0.3em 0.3em 0 0;\n`\n\nexport const Badge = styled.div<{ background: string }>`\n  position: absolute;\n  top: -15px;\n  min-width: 50px;\n  height: 27px;\n  background-color: ${props => props.background || '#111'};\n  border-radius: 0.3em;\n  padding: 3px;\n  box-shadow: 1px 1px 5px 0px #000;\n`\n\nexport const BadgeText = styled(Typography)<{ txtcolor: string }>`\n  font-size: 16px !important;\n  color: ${props => props.txtcolor || 'white'};\n`\n\nexport const InfoContainer = styled.div`\n  position: relative;\n  padding: 25px 10px 15px 10px;\n\n  p {\n    user-select: none;\n  }\n`\n\nexport const Title = styled(Typography)``\n\nexport const SubTitle = styled(Typography)``\n","import React from 'react'\n\nimport * as S from '@Style/CardStyles'\n\ninterface Badge {\n  text: string\n  color?: string\n  background?: string\n}\n\ninterface CardProps {\n  title: string\n  subtitle: string\n  image?: string\n  wpImage?: boolean\n  badge?: Badge\n}\n\nconst Card: React.FC<CardProps> = (props: CardProps) => {\n  const { title, subtitle, image, wpImage, badge } = props\n  return (\n    <S.Container>\n      <S.PictureBox src={image} wordpress={wpImage} />\n      <S.InfoContainer>\n        {badge.text && (\n          <S.Badge background={badge.background}>\n            <S.BadgeText txtcolor={badge.color}>{badge.text}</S.BadgeText>\n          </S.Badge>\n        )}\n        <S.Title>{title}</S.Title>\n        <S.SubTitle>{subtitle}</S.SubTitle>\n      </S.InfoContainer>\n    </S.Container>\n  )\n}\n\nCard.defaultProps = {\n  wpImage: false,\n}\n\nexport default Card\n","import styled from 'styled-components'\nimport { Link } from 'gatsby'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport device from '@Config/devices.config'\n\nexport const Title = styled.h1`\n  text-align: center;\n`\n\nexport const CardContainer = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-column-gap: 20px;\n  grid-row-gap: 20px;\n  padding: 0 10%;\n\n  @media ${device.tablet} {\n    grid-template-columns: 1fr 1fr;\n    padding: 0;\n  }\n\n  @media ${device.laptop} {\n    grid-template-columns: 1fr 1fr 1fr;\n  }\n`\n\nexport const StyLink = styled(Link)`\n  text-decoration: none;\n  color: #111111;\n`\n\nexport const NotFoundText = styled(Typography)``\n","import { useStaticQuery, graphql } from 'gatsby'\n\nexport interface FeaturedImage {\n  node: {\n    sourceUrl: string\n  }\n}\n\nexport interface ClassifierNode {\n  nodes: {\n    slug: string\n    name: string\n    link: string\n  }[]\n}\n\nexport interface EdgesNode {\n  id: string\n  slug: string\n  link: string\n  date: string\n  title: string\n  excerpt: string\n  featuredImage: FeaturedImage\n  categories: ClassifierNode\n  tags: ClassifierNode\n}\n\ninterface BlogPosts {\n  allWpPost: {\n    edges: {\n      node: EdgesNode\n    }[]\n  }\n}\n\nconst useBlogPostsWP = (): BlogPosts => {\n  return useStaticQuery<BlogPosts>(graphql`\n    query {\n      allWpPost(sort: { fields: date, order: DESC }) {\n        edges {\n          node {\n            id\n            slug\n            link\n            date\n            title\n            excerpt\n            featuredImage {\n              node {\n                sourceUrl\n              }\n            }\n            categories {\n              nodes {\n                slug\n                name\n                link\n              }\n            }\n            tags {\n              nodes {\n                slug\n                name\n                link\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n}\n\nexport default useBlogPostsWP\n","import React from 'react'\nimport { get } from 'lodash'\n\n// Utils\nimport getCategoryColors from '@Util/getCategoryColors'\n\n// Components\nimport DefaultLayout from '@Layout/DefaultLayout'\nimport SEO from '@Component/Seo'\nimport Card from '@Component/Card'\nimport * as S from '@Style/BlogStyles'\n\n// Hooks\nimport useBlogPosts, { EdgesNode } from '@Hook/use-blog-posts'\n\nconst Blog: React.FC = () => {\n  const {\n    allWpPost: { edges },\n  } = useBlogPosts()\n\n  const RenderCard: React.FC<{ node: EdgesNode }> = ({ node }) => {\n    const { link, title, categories, featuredImage } = node\n\n    const postImage = get(featuredImage, 'node.sourceUrl', '')\n    const categoryName = get(categories, 'nodes.[0].name', null)\n    const categorySlug = get(categories, 'nodes.[0].slug', null)\n\n    // prettier-ignore\n    const background = getCategoryColors('background', null, categorySlug) as string\n    const color = getCategoryColors('color', null, categorySlug) as string\n\n    return (\n      <S.StyLink key={`blog-post-${link}`} to={`/blog${link}`}>\n        <Card\n          image={postImage}\n          wpImage\n          badge={{\n            text: categoryName,\n            background,\n            color,\n          }}\n          title={title}\n          subtitle=\"\"\n        />\n      </S.StyLink>\n    )\n  }\n\n  return (\n    <DefaultLayout>\n      <SEO title=\"Blog\" />\n      <S.Title>BETA (TMP)</S.Title>\n      <S.CardContainer>\n        {edges.map(({ node }) => (\n          <RenderCard key={`card-${node.id}`} node={node} />\n        ))}\n        {!edges.length && (\n          <S.NotFoundText>Nenhum post encontrado</S.NotFoundText>\n        )}\n      </S.CardContainer>\n    </DefaultLayout>\n  )\n}\n\nexport default Blog\n"],"sourceRoot":""}