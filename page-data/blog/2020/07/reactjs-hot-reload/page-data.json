{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/blog/2020/07/reactjs-hot-reload","result":{"data":{"markdownRemark":{"html":"<h3>Hot reload, o que é, e porque usar</h3>\n<p>Sabe quando você faz alguma alteração na sua aplicação ReactJS e seu navegador recarrega para exibí-la? Bom, já deve ter percebido que sempre que isso ocorre todo estado da sua aplicação também é reiniciado e isso pode em certos cenários levar você a ter que executar diversas ações para \"restaurar\" o que foi perdido.</p>\n<p>Mas, existe uma solução para isso! Conheça o <a href=\"https://github.com/gaearon/react-hot-loader\">\"React Hot Loader\"</a>. Essa biblioteca permite exibir as modificações na aplicação sem recarregar a página, logo todo o estado da aplicação é preservado e as alterações realizadas aparecem quase instantaneamente na página.</p>\n<p>Posso dizer por experiência própria que isso facilita e muito no desenvolvimento, aumentando assim sua produtividade. Mas e aí? Você pode estar se perguntando como fazer isso funcionar em sua aplicação?</p>\n<h3>Instalando o React Hot Loader com CRACO</h3>\n<p>Toda aplicação criada com o comando <code class=\"language-text\">create-react-app</code> possui um webpack gerado automaticamente, esse empacotador é utilizado por padrão conforme havia citado no post anterior, e não existe uma forma \"nativa\" para modificá-lo a não ser ejetando o projeto. Mas com o <a href=\"https://github.com/gsoft-inc/craco\">CRACO</a> isso é possível, veja como instalar e configurar abaixo:</p>\n<ul>\n<li>Primeiro, instale a biblioteca em seu projeto com <code class=\"language-text\">npm i @craco/craco</code>;</li>\n<li>Agora, modifique seu arquivo <code class=\"language-text\">package.json</code> conforme demonstrado a seguir:</li>\n</ul>\n<div class=\"gatsby-code-title md-code-title\">package.json</div>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"craco start\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"build\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"craco build\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"test\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"craco test\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Sim, você irá substituir o comando padrão <code class=\"language-text\">react-scripts</code> por <code class=\"language-text\">craco</code>.</p>\n<ul>\n<li>Agora instale a biblioteca com: <code class=\"language-text\">npm i react-hot-loader</code></li>\n<li>Crie um arquivo na raíz do projeto chamado <code class=\"language-text\">craco.config.js</code> e preencha-o assim:</li>\n</ul>\n<div class=\"gatsby-code-title md-code-title\">craco.config.js</div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  webpack<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react-hot-loader/patch'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./src'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  babel<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react-hot-loader/babel'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Por último, você precisará modificar o componente principal da sua aplicação, geralmente o <code class=\"language-text\">App.jsx</code>:</li>\n</ul>\n<div class=\"gatsby-code-title md-code-title\">src/App.jsx</div>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// ...</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> hot <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-hot-loader/root'</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">hot</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>OBS:</strong> Um erro comum que pode acontecer é importar dessa maneira <code class=\"language-text\">import { hot } from &#39;react-hot-loader&#39;</code>, porém está incorreto e irá causar erro quando for executar a aplicação. Note que a importação correta possui <code class=\"language-text\">/root</code> no final.</p>\n<p>Pronto, se tudo ocorreu bem na instalação o React Hot Loader já deve estar funcionando em sua aplicação.</p>\n<h3>React Hooks (IMPORTANTE)</h3>\n<p>Caso utiliza React Hooks, é necessário realizar dois procedimentos:</p>\n<ul>\n<li>Instalar a biblioteca <code class=\"language-text\">npm i @hot-loader/react-dom</code></li>\n<li>Acrescentar um alias no arquivo `craco.config.js</li>\n</ul>\n<div class=\"gatsby-code-title md-code-title\">craco.config.js</div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  webpack<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    alias<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'react-dom'</span><span class=\"token operator\">:</span> <span class=\"token string\">'@hot-loader/react-dom'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    entry<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react-hot-loader/patch'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./src'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  babel<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'react-hot-loader/babel'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Agora sim! Tudo deve estar funcionando corretamente (assim espero rsrsrs)... Isso irá lhe ajudar e muito no desenvolvimento, você verá!</p>","frontmatter":{"file":"/blob/master/_posts/2020/07/reactjs-hot-reload.md","date":"2020-07-26 23:10:00","slug":"/blog/2020/07/reactjs-hot-reload","title":"ReactJS com Hot Reload","image":"2020/07/hot-reload.png","imageAlt":"React hot reload image","tags":["ReactJS","Javascript","Webpack"],"badgeColors":["black","black","black"],"badgeBackgrounds":["#4cdafe","#f7df1e","#1c78c0"]}}},"pageContext":{"slug":"/blog/2020/07/reactjs-hot-reload"}}}