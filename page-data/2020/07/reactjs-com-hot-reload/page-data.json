{"componentChunkName":"component---src-templates-blog-template-tsx","path":"/2020/07/reactjs-com-hot-reload/","result":{"data":{"wpPost":{"title":"ReactJS com Hot Reload","excerpt":"<p>Hot reload, o que é, e porque usar Sabe quando você faz alguma alteração na sua aplicação ReactJS e seu navegador recarrega para exibí-la? Bom, já deve ter percebido que sempre que isso ocorre todo estado da sua aplicação também é reiniciado e isso pode em certos cenários levar você a ter que executar diversas […]</p>\n","content":"\n<h3>Hot reload, o que é, e porque usar</h3>\n\n\n\n<p>Sabe quando você faz alguma alteração na sua aplicação ReactJS e seu navegador recarrega para exibí-la? Bom, já deve ter percebido que sempre que isso ocorre todo estado da sua aplicação também é reiniciado e isso pode em certos cenários levar você a ter que executar diversas ações para “restaurar” o que foi perdido.</p>\n\n\n\n<p>Mas, existe uma solução para isso! Conheça o <a href=\"https://github.com/gaearon/react-hot-loader\">“React Hot Loader”</a>. Essa biblioteca permite exibir as modificações na aplicação sem recarregar a página, logo todo o estado da aplicação é preservado e as alterações realizadas aparecem quase instantaneamente na página.</p>\n\n\n\n<p>Posso dizer por experiência própria que isso facilita e muito no desenvolvimento, aumentando assim sua produtividade. Mas e aí? Você pode estar se perguntando como fazer isso funcionar em sua aplicação?</p>\n\n\n\n<h3 id=\"instalando-o-react-hot-loader-com-craco\"><a href=\"https://sourcevortex.com.br/blog/2020/07/reactjs-hot-reload#instalando-o-react-hot-loader-com-craco\"></a>Instalando o React Hot Loader com CRACO</h3>\n\n\n\n<p>Toda aplicação criada com o comando <code>create-react-app</code>possui um webpack gerado automaticamente, esse empacotador é utilizado por padrão conforme havia citado no post anterior, e não existe uma forma “nativa” para modificá-lo a não ser ejetando o projeto. Mas com o <a href=\"https://github.com/gsoft-inc/craco\">CRACO</a> isso é possível, veja como instalar e configurar abaixo:</p>\n\n\n\n<ul><li>Primeiro, instale a biblioteca em seu projeto com <code>npm i @craco/craco</code>;</li><li>Agora, modifique seu arquivo <code>package.json</code>conforme demonstrado a seguir:</li></ul>\n\n\n\n<div class=\"gatsby-code-title md-code-title\">package.json</div>\n\n\n\n<pre class=\"wp-block-code language-json\"><code>\"scripts\": {\n   \"start\": \"craco start\",\n   \"build\": \"craco build\",\n   \"test\": \"craco test\"\n}</code></pre>\n\n\n\n<p></p>\n\n\n\n<p>Sim, você irá substituir o comando padrão <code>react-scripts</code>por <code>craco</code>.</p>\n\n\n\n<ul><li>Agora instale a biblioteca com: <code>npm i react-hot-loader</code></li><li>Crie um arquivo na raíz do projeto chamado <code>craco.config.js</code>e preencha-o assim:</li></ul>\n\n\n\n<div class=\"gatsby-code-title md-code-title\">craco.config.js</div>\n\n\n\n<pre class=\"wp-block-code language-javascript\"><code>module.exports = {\n  webpack: {\n    entry: ['react-hot-loader/patch', './src'],\n  },\n  babel: {\n    plugins: ['react-hot-loader/babel'],\n  },\n}</code></pre>\n\n\n\n<p></p>\n\n\n\n<ul><li>Por último, você precisará modificar o componente principal da sua aplicação, geralmente o <code>App.jsx</code>:</li></ul>\n\n\n\n<div class=\"gatsby-code-title md-code-title\">src/App.jsx</div>\n\n\n\n<pre class=\"wp-block-code language-jsx\"><code>// ...\nimport { hot } from 'react-hot-loader/root'\n\n// ...\n\nfunction App() {\n  // ...\n}\n\nexport default hot(App)</code></pre>\n\n\n\n<p><strong>OBS:</strong> Um erro comum que pode acontecer é importar dessa maneira <code>import { hot } from 'react-hot-loader'</code>, porém está incorreto e irá causar erro quando for executar a aplicação. Note que a importação correta possui <code>/root</code>no final.</p>\n\n\n\n<p>Pronto, se tudo ocorreu bem na instalação o React Hot Loader já deve estar funcionando em sua aplicação.</p>\n\n\n\n<h3 id=\"react-hooks-importante\"><a href=\"https://sourcevortex.com.br/blog/2020/07/reactjs-hot-reload#react-hooks-importante\"></a>React Hooks (IMPORTANTE)</h3>\n\n\n\n<p>Caso utiliza React Hooks, é necessário realizar dois procedimentos:</p>\n\n\n\n<ul><li>Instalar a biblioteca <code>npm i @hot-loader/react-dom</code></li><li>Acrescentar um alias no arquivo `craco.config.js</li></ul>\n\n\n\n<div class=\"gatsby-code-title md-code-title\">craco.config.js</div>\n\n\n\n<pre class=\"wp-block-code language-javascript\"><code>module.exports = {\n  webpack: {\n    alias: {\n      'react-dom': '@hot-loader/react-dom',\n    },\n    entry: ['react-hot-loader/patch', './src'],\n  },\n  babel: {\n    plugins: ['react-hot-loader/babel'],\n  },\n}</code></pre>\n\n\n\n<p>Agora sim! Tudo deve estar funcionando corretamente (assim espero rsrsrs)… Isso irá lhe ajudar e muito no desenvolvimento, você verá!</p>\n","date":"2020-07-26T23:10:48","featuredImage":{"node":{"sourceUrl":"http://sourcevortex.admin.dev.com/wp-content/uploads/2020/07/hot-reload.png","altText":"","localFile":{"publicURL":"/static/83e46a77f41ce67bfd034e666eb615c3/hot-reload.png"}}},"categories":{"nodes":[{"slug":"javascript","name":"Javascript","link":"/category/javascript/"},{"slug":"reactjs","name":"ReactJS","link":"/category/javascript/reactjs/"},{"slug":"webpack","name":"Webpack","link":"/category/javascript/webpack/"}]}}},"pageContext":{"id":"cG9zdDoxMjc="}}}